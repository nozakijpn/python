connect_timeonly.py
時間情報のみでwavデータを結合する
connect_time_iv.py
時間情報とi-vectorの数値で結合する


usage
・python prob_connect.py {num}を実行
   1 timeonly
   2 time and i-vector
   3 background noise
・作られるconnect_{}.shを実行
・i-vectorを抽出
・抽出したi-vectorをrename_{}.shでリネーム。
・python clustering.pyでクラスタリング

acc_sox.py
・get_connect_iv.shを実行したあとで実行すると、soxの精度が出る

search_other_speaker_interval.py
search_same_speaker_interval.py
・発話間の時間が同じ話者同士とそうでない場合のふたとおりで時間を計算、出力

mk_connect_wav.py
・connect.shではただつなげるだけだったが、こちらでは同じ話者は発話区間を範囲で切り出すためにtrimを行う。
・get_connect_iv_v2.shに組み込んでいるため、これを実行すれば動く。

check_balance.py
バランス文で、何秒以上だと話者性を確保できるかを検証するためのプログラム。
パラメータは、trimする秒数。
実行する前に、sph内の音声データを削除する必要あり
実行場所はバランス文があるディレクトリ内

comp_same_or_other_iv.py
i-vectorで、何秒以上だと話者性を確保できるかを検証するためのプログラム。
check_balance.pyを実行後にiv/raw内で実行する。
のちのち、ヒストグラムで表示する予定